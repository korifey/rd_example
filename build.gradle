import com.jetbrains.rd.generator.gradle.RdGenExtension
import com.jetbrains.rd.generator.gradle.RdGenTask

plugins {
    id 'com.jetbrains.rdgen' version "2022.3.1"
    id 'org.jetbrains.kotlin.jvm' version '1.7.0'
}

repositories {
    mavenCentral()
}

group = 'org.example'
version = '1.0-SNAPSHOT'



dependencies {
    implementation group: 'com.jetbrains.rd', name: 'rd-framework', version: '2022.3.1'
    implementation group: 'com.jetbrains.rd', name: 'rd-gen', version: '2022.3.1'
    implementation group: 'com.jetbrains.rd', name: 'rd-core', version: '2022.3.1'
    testImplementation 'org.jetbrains.kotlin:kotlin-test'
}

test {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions.jvmTarget = '1.8'
}

compileTestKotlin {
    kotlinOptions.jvmTarget = '1.8'
}

kotlin {
    sourceSets {
        main.kotlin.srcDirs += 'build/rdgen'
    }
}

task generateProtocolModels(type: RdGenTask) {
    group = "rdgen"

    def modelDir = new File(project.projectDir, "src/main/kotlin/org/korifey/rd_example/model")
    def rdOutputDir = new File(project.projectDir, "build/rdgen")

    def rdParams = extensions.getByName("params") as RdGenExtension
    rdParams.verbose = true

    rdParams.sources(modelDir)
    rdParams.hashFolder = rdOutputDir
    rdParams.packages = "org.korifey.rd_example.model"

    rdParams.generator {
        language = "kotlin"
        transform = "symmetric"
        root = "org.korifey.rd_example.model.ProtocolRoot"

        directory = rdOutputDir.canonicalPath
        namespace = "org.korifey.rd_example.generated"
    }
}